version: '3.4'

services:
  # Catalog database configuration
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  
  # Basket database configuration
  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
  
  # Discount database configuration
  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Password@1
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # Ordering database configuration
  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "miguelbtcode123."
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'miguelbtcode123.' -Q 'select 1'" ]
      interval: 10s
      timeout: 10s
      retries: 3
      
  # RabbitMQ configuration
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  
  # PgAdmin configuration
  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@eshopping.net
      - PGADMIN_DEFAULT_PASSWORD=Password@1
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  # Portainer configuration
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  
  # Catalog api configuration
  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
      - "DatabaseSettings__DatabaseName=CatalogDb"
      - "DatabaseSettings__ProductsCollection=Products"
      - "DatabaseSettings__BrandsCollection=Brands"
      - "DatabaseSettings__TypesCollection=Types"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - catalogdb
    ports:
      - "8000:8080"
  
  # Basket api configuration
  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings__ConnectionString=basketdb:6379"
      - "GrpcSettings__DiscountUrl=http://discount.api:8080"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "8001:8080"
  
  # Discount api configuration
  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=Password@1;"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      discountdb:
        condition: service_healthy
    ports:
      - "8002:8080"
  
  # Ordering api configuration
  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=miguelbtcode123.;TrustServerCertificate=True"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8003:8080"
    command: >
      /bin/sh -c "sleep 30 && dotnet ef database update --project ../Ordering.Infrastructure"

  # Elastic search configuration
  elasticsearch:
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  
  # Kibana configuration
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"